#https://navigation.ros.org/configuration/packages/configuring-costmaps.html?highlight=pointcloud
bt_navigator:
  ros__parameters:
    use_sim_time: False
    global_frame: map
    robot_base_frame: base_link
    odom_topic: /odometry #Changed by me see slam_2cam.launch
    bt_loop_duration: 10
    default_server_timeout: 20
    # 'default_nav_through_poses_bt_xml' and 'default_nav_to_pose_bt_xml' are use defaults:
    # nav2_bt_navigator/navigate_to_pose_w_replanning_and_recovery.xml
    # nav2_bt_navigator/navigate_through_poses_w_replanning_and_recovery.xml
    # They can be set here or via a RewrittenYaml remap from a parent launch file to Nav2.
    plugin_lib_names:
      - nav2_compute_path_to_pose_action_bt_node
      - nav2_compute_path_through_poses_action_bt_node
      - nav2_smooth_path_action_bt_node
      - nav2_follow_path_action_bt_node
      - nav2_spin_action_bt_node
      - nav2_wait_action_bt_node
      - nav2_assisted_teleop_action_bt_node
      - nav2_back_up_action_bt_node
      - nav2_drive_on_heading_bt_node
      - nav2_clear_costmap_service_bt_node
      - nav2_is_stuck_condition_bt_node
      - nav2_goal_reached_condition_bt_node
      - nav2_goal_updated_condition_bt_node
      - nav2_globally_updated_goal_condition_bt_node
      - nav2_is_path_valid_condition_bt_node
      - nav2_initial_pose_received_condition_bt_node
      - nav2_reinitialize_global_localization_service_bt_node
      - nav2_rate_controller_bt_node
      - nav2_distance_controller_bt_node
      - nav2_speed_controller_bt_node
      - nav2_truncate_path_action_bt_node
      - nav2_truncate_path_local_action_bt_node
      - nav2_goal_updater_node_bt_node
      - nav2_recovery_node_bt_node
      - nav2_pipeline_sequence_bt_node
      - nav2_round_robin_node_bt_node
      - nav2_transform_available_condition_bt_node
      - nav2_time_expired_condition_bt_node
      - nav2_path_expiring_timer_condition
      - nav2_distance_traveled_condition_bt_node
      - nav2_single_trigger_bt_node
      - nav2_goal_updated_controller_bt_node
      - nav2_is_battery_low_condition_bt_node
      - nav2_navigate_through_poses_action_bt_node
      - nav2_navigate_to_pose_action_bt_node
      - nav2_remove_passed_goals_action_bt_node
      - nav2_planner_selector_bt_node
      - nav2_controller_selector_bt_node
      - nav2_goal_checker_selector_bt_node
      - nav2_controller_cancel_bt_node
      - nav2_path_longer_on_approach_bt_node
      - nav2_wait_cancel_bt_node
      - nav2_spin_cancel_bt_node
      - nav2_back_up_cancel_bt_node
      - nav2_assisted_teleop_cancel_bt_node
      - nav2_drive_on_heading_cancel_bt_node
      - nav2_is_battery_charging_condition_bt_node

bt_navigator_navigate_through_poses_rclcpp_node:
  ros__parameters:
    use_sim_time: False

bt_navigator_navigate_to_pose_rclcpp_node:
  ros__parameters:
    use_sim_time: False

controller_server:
  ros__parameters:
    use_sim_time: False
    controller_frequency: 20.0
    min_x_velocity_threshold: 0.001
    min_y_velocity_threshold: 0.5
    min_theta_velocity_threshold: 0.001
    failure_tolerance: 0.3
    progress_checker_plugin: "progress_checker"
    goal_checker_plugins: ["general_goal_checker"] # "precise_goal_checker"
    controller_plugins: ["FollowPath"]

    # Progress checker parameters
    progress_checker:
      plugin: "nav2_controller::SimpleProgressChecker"
      required_movement_radius: 0.5
      movement_time_allowance: 10.0
    # Goal checker parameters
    general_goal_checker:
      stateful: True
      plugin: "nav2_controller::SimpleGoalChecker"
      xy_goal_tolerance: 0.25
      yaw_goal_tolerance: 0.25
    # DWB parameters
    FollowPath:
      plugin: "nav2_mppi_controller::MPPIController"
      time_steps: 90
      model_dt: 0.0625
      batch_size: 2000
      vx_std: 0.1
      vy_std: 0.0
      wz_std: 0.1
      vx_max: 0.5 
      vx_min: -0.5 
      vy_max: 0.0
      wz_max: 0.4 
      iteration_count: 1
      prune_distance: 3.0 
      transform_tolerance: 0.3
      temperature: 0.3
      gamma: 0.015
      motion_model: "DiffDrive" 
      visualize: false
      reset_period: 1.0 
      TrajectoryVisualizer:
        trajectory_step: 5
        time_step: 3
      max_robot_pose_search_dist: 5.0 
      enforce_path_inversion: True 
      inversion_xy_tolerance: 0.2 
      inversion_yaw_tolerance: 0.4 
      AckermannConstrains:
        min_turning_r: 0.5
      critics:
        [
          "ConstraintCritic",
          "ObstaclesCritic",
          "GoalCritic",
          "GoalAngleCritic",
          "PathAlignCritic",
          "PathFollowCritic",
          "PathAngleCritic",
          "PreferForwardCritic",
        ]
      ConstraintCritic:
        enabled: true
        cost_power: 1
        cost_weight: 4.0
      GoalCritic:
        enabled: true
        cost_power: 1
        cost_weight: 5.0
        threshold_to_consider: 1.4 
      GoalAngleCritic:
        enabled: true
        cost_power: 1
        cost_weight: 5.0 
        threshold_to_consider: 0.5 
      PreferForwardCritic:
        enabled: false
        cost_power: 1
        cost_weight: 5.0 
        threshold_to_consider: 1.4 
      ObstaclesCritic:
        enabled: true
        cost_power: 1
        repulsion_weight: 1.5 
        critical_weight: 20.0 
        consider_footprint: True 
        collision_cost: 10000.0
        collision_margin_distance: 0.1 
        near_goal_distance: 0.5 
        inflation_radius: 3.9 
        cost_scaling_factor: 1.5 
      PathAlignCritic:
        enabled: true
        use_path_orientations: True 
        cost_power: 1
        cost_weight: 14.0 
        max_path_occupancy_ratio: 0.05
        trajectory_point_step: 3 
        threshold_to_consider: 0.5 
        offset_from_furthest: 13 
      PathFollowCritic:
        enabled: true
        cost_power: 1
        cost_weight: 17.0 
        offset_from_furthest: 5 
        threshold_to_consider: 0.5 
      PathAngleCritic:
        enabled: true
        cost_power: 1
        mode: 2 
        cost_weight: 4.0 
        offset_from_furthest: 20 
        threshold_to_consider: 1.4 
        max_angle_to_furthest: 0.25 

# LOCAL COSTMAP
local_costmap:
  local_costmap:
    ros__parameters:
      update_frequency: 5.0
      publish_frequency: 2.0
      global_frame: odom
      robot_base_frame: base_link
      use_sim_time: False
      rolling_window: true
      width: 5
      height: 5
      resolution: 0.05
      footprint: "[ [0.55, 0.25], [0.55, -0.25], [-0.55, -0.25], [-0.55, 0.25] ]"
      plugins: ["static_layer","obstacle_layer"] #"voxel_layer"
      static_layer:
        plugin: "nav2_costmap_2d::StaticLayer"
        map_subscribe_transient_local: True
      obstacle_layer:
        obstacle_layer:
        plugin: "nav2_costmap_2d::ObstacleLayer"
        enabled: True
        observation_sources: pointcloud
        combination_method: 1 
        pointcloud:
          topic: "/rtabmap/local_grid_obstacle"
          max_obstacle_height: 3.0
          clearing: True
          marking: True
          raytrace_max_range: 5.0
          raytrace_min_range: 0.0
          obstacle_max_range: 3.5
          obstacle_min_range: 0.0
          data_type: "PointCloud2"
          inf_is_valid: false
      #voxel_layer:
      #  plugin: "nav2_costmap_2d::VoxelLayer"
      #  enabled: True
      #  publish_voxel_map: True
      #  origin_z: 0.0
      #  z_resolution: 0.05
      #  z_voxels: 16
      #  max_obstacle_height: 2.0
      #  mark_threshold: 0
      #  observation_sources: "PointCloud2"
      #  pointcloud:
      #    topic: "/rtabmap/cloud_map" # Maybe the octomap_ something
      #    data_type: "PointCloud2"
      #    max_obstacle_height: 2.0
      #    clearing: False # https://github.com/ros-planning/navigation2/issues/2732
      #    marking: True
      #    raytrace_max_range: 3.0
      #    raytrace_min_range: 0.0
      #    obstacle_max_range: 2.5
      #    obstacle_min_range: 0.0
      always_send_full_costmap: True

#https://navigation.ros.org/configuration/packages/configuring-costmaps.html?highlight=pointcloud

#See if i can do without the "advanced local planner follow the above"

# footprint: "[ [0.25, 0.55], [0.25, -0.55], [-0.25, -0.55], [-0.25, 0.55] ]" 0.55

global_costmap:
  global_costmap:
    ros__parameters:
      update_frequency: 1.0
      publish_frequency: 1.0
      map_topic: "/rtabmap/map" #
      global_frame: map
      robot_base_frame: base_link
      use_sim_time: False
      robot_radius: 0.55 # Spot is 1100 mm in length = 1.1 m
      resolution: 0.05
      track_unknown_space: true
      plugins: ["static_layer", "inflation_layer"]
      static_layer:
        plugin: "nav2_costmap_2d::StaticLayer"
        map_subscribe_transient_local: True
      inflation_layer:
        plugin: "nav2_costmap_2d::InflationLayer"
        cost_scaling_factor: 3.0
        inflation_radius: 0.4
      always_send_full_costmap: True

planner_server:
  ros__parameters:
    expected_planner_frequency: 20.0
    use_sim_time: False
    planner_plugins: ["GridBased"]
    GridBased:
      plugin: "nav2_navfn_planner/NavfnPlanner"
      tolerance: 0.5
      use_astar: false
      allow_unknown: true

smoother_server:
  ros__parameters:
    use_sim_time: False
    smoother_plugins: ["simple_smoother"]
    simple_smoother:
      plugin: "nav2_smoother::SimpleSmoother"
      tolerance: 1.0e-10
      max_its: 1000
      do_refinement: True

behavior_server:
  ros__parameters:
    costmap_topic: local_costmap/costmap_raw
    footprint_topic: local_costmap/published_footprint
    cycle_frequency: 10.0
    behavior_plugins: ["spin", "backup", "drive_on_heading", "assisted_teleop", "wait"]
    spin:
      plugin: "nav2_behaviors/Spin"
    backup:
      plugin: "nav2_behaviors/BackUp"
    drive_on_heading:
      plugin: "nav2_behaviors/DriveOnHeading"
    wait:
      plugin: "nav2_behaviors/Wait"
    assisted_teleop:
      plugin: "nav2_behaviors/AssistedTeleop"
    global_frame: odom
    robot_base_frame: base_link
    transform_tolerance: 0.1
    use_sim_time: False
    simulate_ahead_time: 2.0
    max_rotational_vel: 1.0
    min_rotational_vel: 0.4
    rotational_acc_lim: 3.2

robot_state_publisher:
  ros__parameters:
    use_sim_time: False

waypoint_follower:
  ros__parameters:
    use_sim_time: False
    loop_rate: 20
    stop_on_failure: false
    waypoint_task_executor_plugin: "wait_at_waypoint"
    wait_at_waypoint:
      plugin: "nav2_waypoint_follower::WaitAtWaypoint"
      enabled: True
      waypoint_pause_duration: 200

velocity_smoother:
  ros__parameters:
    use_sim_time: False
    smoothing_frequency: 20.0
    scale_velocities: False
    feedback: "OPEN_LOOP"
    max_velocity: [0.26, 0.0, 1.0]
    min_velocity: [-0.26, 0.0, -1.0]
    max_accel: [2.5, 0.0, 3.2]
    max_decel: [-2.5, 0.0, -3.2]
    odom_topic: "odom" # maybe /odometry
    odom_duration: 0.1
    deadband_velocity: [0.0, 0.0, 0.0]
    velocity_timeout: 1.0

#The DWBLocalPlanner
#FollowPath:
#      plugin: "dwb_core::DWBLocalPlanner"
#      debug_trajectory_details: True
#      min_vel_x: 0.0
#      min_vel_y: 0.0
#      max_vel_x: 0.26
#      max_vel_y: 0.0
#      max_vel_theta: 1.0
#      min_speed_xy: 0.0
#      max_speed_xy: 0.26
#      min_speed_theta: 0.0
#      # Add high threshold velocity for turtlebot 3 issue.
#      # https://github.com/ROBOTIS-GIT/turtlebot3_simulations/issues/75
#      acc_lim_x: 2.5
#      acc_lim_y: 0.0
#      acc_lim_theta: 3.2
#      decel_lim_x: -2.5
#      decel_lim_y: 0.0
#      decel_lim_theta: -3.2
#      vx_samples: 20
#      vy_samples: 5
#      vtheta_samples: 20
#      sim_time: 1.7
#      linear_granularity: 0.05
#      angular_granularity: 0.025
#      transform_tolerance: 0.2
#      xy_goal_tolerance: 0.25
#      trans_stopped_velocity: 0.25
#      short_circuit_trajectory_evaluation: True
#      stateful: True
#      critics: ["RotateToGoal", "Oscillation", "BaseObstacle", "GoalAlign", "PathAlign", "PathDist", "GoalDist"]
#      BaseObstacle.scale: 0.02
#      PathAlign.scale: 32.0
#      PathAlign.forward_point_distance: 0.1
#      GoalAlign.scale: 24.0
#      GoalAlign.forward_point_distance: 0.1
#      PathDist.scale: 32.0
#      GoalDist.scale: 24.0
#      RotateToGoal.scale: 32.0
#      RotateToGoal.slowing_factor: 5.0
#      RotateToGoal.lookahead_time: -1.0

